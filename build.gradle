plugins {
    id "java-library"
    id "pl.allegro.tech.build.axion-release" version "$axionReleaseVersion"
    id "com.vanniktech.maven.publish" version "$mavenPublishVersion"
}

repositories {
    mavenLocal()
    mavenCentral()
}

scmVersion { tag { prefix.set("") } }

project.version = scmVersion.version
project.group = 'de.esoco'
project.description = 'General development support functions'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    api 'org.obrel:objectrelations:1.5.2'

    implementation "jakarta.validation:jakarta.validation-api:$jakartaValidationVersion"

    testImplementation platform("org.junit:junit-bom:$junitVersion")
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

mavenPublishing {
    coordinates("$project.group", "$project.name", "$project.version")

    pom {
        name = "$project.name"
        description = "$project.description"
        inceptionYear = "2016"
        url = "https://github.com/esoco/${project.name}"
        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = "esoco"
                name = "esoco GmbH"
                url = "https://esoco.de/"
            }
        }
        scm {
            url = "https://github.com/esoco/${project.name}/"
            connection = "scm:git:git://github.com/esoco/${project.name}.git"
            developerConnection = "scm:git:ssh://git@github.com/esoco/${project.name}.git"
        }
    }
}